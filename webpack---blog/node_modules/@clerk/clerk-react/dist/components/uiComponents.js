"use strict";

var _classCallCheck = require("/vercel/path0/node_modules/@babel/runtime/helpers/classCallCheck.js");

var _createClass = require("/vercel/path0/node_modules/@babel/runtime/helpers/createClass.js");

var _inherits = require("/vercel/path0/node_modules/@babel/runtime/helpers/inherits.js");

var _possibleConstructorReturn = require("/vercel/path0/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");

var _getPrototypeOf = require("/vercel/path0/node_modules/@babel/runtime/helpers/getPrototypeOf.js");

function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived),
            result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
    };
}

function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UserButton = exports.UserProfile = exports.SignUp = exports.SignIn = void 0;

var tslib_1 = require("tslib");

var react_1 = tslib_1.__importDefault(require("react"));

var withClerk_1 = require("./withClerk"); // README: <Portal/> should be a class pure component in order for mount and unmount
// lifecycle props to be invoked correctly. Replacing the class component with a
// functional component wrapped with a React.memo is not identical to the original
// class implementation due to React intricacies such as the useEffectâ€™s cleanup
// seems to run AFTER unmount, while componentWillUnmount runs BEFORE.
// More information can be found at https://clerkinc.slack.com/archives/C015S0BGH8R/p1624891993016300
// The function Portal implementation is commented out for future reference.
// const Portal = React.memo(({ props, mount, unmount }: MountProps) => {
//   const portalRef = React.createRef<HTMLDivElement>();
//   useEffect(() => {
//     if (portalRef.current) {
//       mount(portalRef.current, props);
//     }
//     return () => {
//       if (portalRef.current) {
//         unmount(portalRef.current);
//       }
//     };
//   }, []);
//   return <div ref={portalRef} />;
// });
// Portal.displayName = 'ClerkPortal';


var Portal = /*#__PURE__*/ function(_react_1$default$Pure) {
    _inherits(Portal, _react_1$default$Pure);

    var _super = _createSuper(Portal);

    function Portal() {
        var _this;

        _classCallCheck(this, Portal);

        _this = _super.apply(this, arguments);
        _this.portalRef = react_1.default.createRef();
        return _this;
    }

    _createClass(Portal, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            if (this.portalRef.current) {
                this.props.mount(this.portalRef.current, this.props.props);
            }
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            if (this.portalRef.current) {
                this.props.unmount(this.portalRef.current);
            }
        }
    }, {
        key: "render",
        value: function render() {
            return react_1.default.createElement("div", {
                ref: this.portalRef
            });
        }
    }]);

    return Portal;
}(react_1.default.PureComponent);

exports.SignIn = (0, withClerk_1.withClerk)(function(_a) {
    var clerk = _a.clerk,
        props = tslib_1.__rest(_a, ["clerk"]);

    return react_1.default.createElement(Portal, {
        mount: clerk.mountSignIn,
        unmount: clerk.unmountSignIn,
        props: props
    });
}, 'SignIn');
exports.SignUp = (0, withClerk_1.withClerk)(function(_a) {
    var clerk = _a.clerk,
        props = tslib_1.__rest(_a, ["clerk"]);

    return react_1.default.createElement(Portal, {
        mount: clerk.mountSignUp,
        unmount: clerk.unmountSignUp,
        props: props
    });
}, 'SignUp');
exports.UserProfile = (0, withClerk_1.withClerk)(function(_a) {
    var clerk = _a.clerk,
        props = tslib_1.__rest(_a, ["clerk"]);

    return react_1.default.createElement(Portal, {
        mount: clerk.mountUserProfile,
        unmount: clerk.unmountUserProfile,
        props: props
    });
}, 'UserProfile');
exports.UserButton = (0, withClerk_1.withClerk)(function(_a) {
    var clerk = _a.clerk,
        props = tslib_1.__rest(_a, ["clerk"]);

    return react_1.default.createElement(Portal, {
        mount: clerk.mountUserButton,
        unmount: clerk.unmountUserButton,
        props: props
    });
}, 'UserButton');