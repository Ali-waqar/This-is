"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.loadScript = void 0;

var info_1 = require("../info");

var FAILED_TO_LOAD_ERROR = 'Clerk: Failed to load Clerk';
var MISSING_PROVIDER_ERROR = 'Clerk: Missing provider';
var MISSING_BODY_ERROR = 'Clerk: Missing <body> element.';
var UNSTABLE_RELEASE_TAGS = ['staging'];

var extractNonStableTag = function extractNonStableTag(packageVersion) {
    var _a;

    var tag = (_a = packageVersion.match(/-(.*)\./)) === null || _a === void 0 ? void 0 : _a[1];
    return tag && UNSTABLE_RELEASE_TAGS.includes(tag) ? tag : undefined;
};

var extractMajorVersion = function extractMajorVersion(packageVersion) {
    return packageVersion.split('.')[0];
};

var forceStagingReleaseForClerkFapi = function forceStagingReleaseForClerkFapi(frontendApi) {
    return frontendApi.endsWith('.lclstage.dev') || frontendApi.endsWith('.stgstage.dev') || frontendApi.endsWith('.clerkstage.dev');
};

function getScriptSrc(_ref) {
    var frontendApi = _ref.frontendApi,
        scriptUrl = _ref.scriptUrl,
        _ref$scriptVariant = _ref.scriptVariant,
        scriptVariant = _ref$scriptVariant === void 0 ? '' : _ref$scriptVariant;

    if (scriptUrl) {
        return scriptUrl;
    }

    var variant = scriptVariant ? "".concat(scriptVariant.replace(/\.+$/, ''), ".") : '';

    var getUrlForTag = function getUrlForTag(target) {
        return "https://".concat(frontendApi, "/npm/@clerk/clerk-js@").concat(target, "/dist/clerk.").concat(variant, "browser.js");
    };

    if (forceStagingReleaseForClerkFapi(frontendApi)) {
        return getUrlForTag('staging');
    }

    var nonStableTag = extractNonStableTag(info_1.LIB_VERSION);

    if (nonStableTag) {
        return getUrlForTag(nonStableTag);
    }

    return getUrlForTag(extractMajorVersion(info_1.LIB_VERSION));
}

function loadScript(params) {
    return new Promise(function(resolve, reject) {
        var frontendApi = params.frontendApi;

        if (global.Clerk) {
            resolve(null);
        }

        if (!frontendApi) {
            reject(MISSING_PROVIDER_ERROR);
        }

        var script = document.createElement('script');
        var src = getScriptSrc(params);
        script.setAttribute('data-clerk-frontend-api', frontendApi);
        script.setAttribute('crossorigin', 'anonymous');
        script.async = true;

        if (!document.body) {
            reject(MISSING_BODY_ERROR);
        }

        script.addEventListener('load', function() {
            return resolve(script);
        });
        script.addEventListener('error', function() {
            return reject(FAILED_TO_LOAD_ERROR);
        });
        script.src = src;
        document.body.appendChild(script);
    });
}

exports.loadScript = loadScript;