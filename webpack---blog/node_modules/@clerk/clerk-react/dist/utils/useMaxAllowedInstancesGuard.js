"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.withMaxAllowedInstancesGuard = exports.useMaxAllowedInstancesGuard = void 0;

var tslib_1 = require("tslib");

var react_1 = tslib_1.__importDefault(require("react"));

var counts = new Map();

function useMaxAllowedInstancesGuard(name, error) {
    var maxCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
    react_1.default.useEffect(function() {
        var count = counts.get(name) || 0;

        if (count == maxCount) {
            throw new Error(error);
        }

        counts.set(name, count + 1);
        return function() {
            counts.set(name, (counts.get(name) || 1) - 1);
        };
    }, []);
}

exports.useMaxAllowedInstancesGuard = useMaxAllowedInstancesGuard;

function withMaxAllowedInstancesGuard(WrappedComponent, name, error) {
    var displayName = WrappedComponent.displayName || WrappedComponent.name || name || 'Component';

    var Hoc = function Hoc(props) {
        useMaxAllowedInstancesGuard(name, error);
        return react_1.default.createElement(WrappedComponent, Object.assign({}, props));
    };

    Hoc.displayName = "withMaxAllowedInstancesGuard(".concat(displayName, ")");
    return Hoc;
}

exports.withMaxAllowedInstancesGuard = withMaxAllowedInstancesGuard;